// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetVaccinationTrackerSystem_Project.Data;

#nullable disable

namespace PetVaccinationTrackerSystem_Project.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20250611132710_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Appointment", b =>
                {
                    b.Property<string>("AppointmentID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("PetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeOnly>("TimeOfAppointment")
                        .HasColumnType("time");

                    b.Property<string>("VetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("AppointmentID");

                    b.HasIndex("PetID");

                    b.HasIndex("VetID");

                    b.ToTable("AppointmentList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Clinic", b =>
                {
                    b.Property<string>("ClinicID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ClinicName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ClinicID");

                    b.ToTable("ClinicList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Pet", b =>
                {
                    b.Property<string>("PetID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Breed")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<string>("Gender")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("OwnerFirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OwnerLastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("PetID");

                    b.HasIndex("UserID");

                    b.ToTable("PetList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.PetHealthRecords", b =>
                {
                    b.Property<string>("RecordID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Day")
                        .HasColumnType("int");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("PetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("VaccinationID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("VetID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("RecordID");

                    b.HasIndex("PetID");

                    b.HasIndex("VaccinationID");

                    b.HasIndex("VetID");

                    b.ToTable("PetHealthRecordsList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.User", b =>
                {
                    b.Property<string>("UserID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.ToTable("UserList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.UserContact", b =>
                {
                    b.Property<string>("ContactID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ContactType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ContactValue")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ContactID");

                    b.HasIndex("UserID");

                    b.ToTable("UserContactList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Vaccination", b =>
                {
                    b.Property<string>("VaccinationID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<float>("Frequency")
                        .HasColumnType("real");

                    b.Property<string>("VaccineDesc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VaccineName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("VaccinationID");

                    b.ToTable("VaccinationList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Veterinarian", b =>
                {
                    b.Property<string>("VetID")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("ClinicID")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VetID");

                    b.HasIndex("ClinicID");

                    b.ToTable("VeterinarianList");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Appointment", b =>
                {
                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.Pet", "Pet")
                        .WithMany("Appointments")
                        .HasForeignKey("PetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.Veterinarian", "Vet")
                        .WithMany("Appointments")
                        .HasForeignKey("VetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Pet", b =>
                {
                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.User", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.PetHealthRecords", b =>
                {
                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.Pet", "Pet")
                        .WithMany("PetHealthRecords")
                        .HasForeignKey("PetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.Vaccination", "Vaccination")
                        .WithMany("PetHealthRecords")
                        .HasForeignKey("VaccinationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.Veterinarian", "Vet")
                        .WithMany("PetHealthRecords")
                        .HasForeignKey("VetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pet");

                    b.Navigation("Vaccination");

                    b.Navigation("Vet");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.UserContact", b =>
                {
                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.User", "User")
                        .WithMany("UserContacts")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Veterinarian", b =>
                {
                    b.HasOne("PetVaccinationTrackerSystem_Project.Data.Entities.Clinic", "Clinic")
                        .WithMany("Veterinarians")
                        .HasForeignKey("ClinicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clinic");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Clinic", b =>
                {
                    b.Navigation("Veterinarians");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Pet", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("PetHealthRecords");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.User", b =>
                {
                    b.Navigation("Pets");

                    b.Navigation("UserContacts");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Vaccination", b =>
                {
                    b.Navigation("PetHealthRecords");
                });

            modelBuilder.Entity("PetVaccinationTrackerSystem_Project.Data.Entities.Veterinarian", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("PetHealthRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
